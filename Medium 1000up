📌 1158. Market Analysis I

# Left Join 結合 and year
Select u1.user_id As buyer_id, u1.join_date, Count(o1.order_id) As orders_in_2019
From Orders o1 Right Join Users u1 
On o1.buyer_id = u1.user_id
And Year(o1.order_date) = "2019"
Group By u1.user_id

# Left(column, 4) = year
Select user_id As buyer_id, join_date, IFNULL(num,0) As orders_in_2019
From
(Select user_id, join_date
From Users) As u1
Left Join 
(Select buyer_id, Count(*) As num
From Orders
Where Left(order_date,4) = 2019
Group By buyer_id) As o1
On user_id = buyer_id;





📌 1393. Capital Gain/Loss
# 解法1.
Select stock_name, Sell+Buy As capital_gain_loss
From(
Select stock_name, Sum(price) As Sell
From Stocks
Where operation = "Sell"
Group By stock_name) As tot1 
Left Join
(Select stock_name, -Sum(price) As Buy
From Stocks
Where operation = "Buy"
Group By stock_name) As tot2
Using(stock_name)


# 解法2. 簡單的 sum if 
SELECT stock_name, SUM(IF(operation='Buy',-price,price)) capital_gain_loss 
FROM Stocks
GROUP BY stock_name


# 解法3. case when
Select stock_name, Sum(
    case when operation = 'Buy' Then -price
    when operation = 'Sell' Then price
    end) as capital_gain_loss
From Stocks
group by stock_name


📌 1045. Customers Who Bought All Products
解法 1.
With cte As
(Select customer_id, Count(Distinct product_key) As cnt
 From Customer c1
Group By customer_id)

Select customer_id 
From cte
Where cnt = (Select Count(Distinct Product_key) As num
             From Product)
             
解法 2.
Select customer_id
From (Select customer_id, Count(Distinct product_key) As cnt
      From Customer c1
      Group By customer_id) As c1
Where cnt = (Select Count(Distinct Product_key) As num
             From Product)

📌 1149. Article Views II
Select Distinct(viewer_id) As id
From Views
Group By viewer_id, view_date
Having Count(Distinct article_id) > 1
Order By viewer_id ASC

📌 1174. Immediate Food Delivery II
解法 1.
With cte As
(Select *, 
(Case When order_date = customer_pref_delivery_date Then "Immediate" Else "Scheduled" End) As type, 
Rank() Over(Partition By customer_id Order By order_date ASC) As rnk
From Delivery)

Select Round(Sum(type="Immediate")/Count(*)*100,2) As immediate_percentage
From cte
Where rnk=1

解法 2. 
Select Round(Count(customer_id)/(Select Count(Distinct customer_id) From Delivery)*100,2)
As immediate_percentage
From Delivery
Where (customer_id,order_date) IN
(Select customer_id, Min(order_date) As order_date
From Delivery
Group By customer_id)
And order_date = customer_pref_delivery_date;

📌 1193. Monthly Transactions I
解法 1.
Select Left(trans_date,7) As month, Country, Count(*) As trans_count, Sum(state="approved") As approved_count, Sum(amount) As trans_total_amount, Sum(Case When state="approved" Then amount Else 0 End) As approved_total_amount
From Transactions
Group By country, Left(trans_date,7)

解法 2. 


📌 1077. Project Employees III
解法 1.
With cte As
(Select project_id, Max(experience_years) As experience_years
From Project p1 Left Join Employee e1 Using(employee_id)
Group By project_id)

Select p1.project_id, e1.employee_id
From Project p1 Right Join Employee e1 Using(employee_id)
Where (project_id, experience_years) In (Select project_id, experience_years
                         From cte)
                         
解法 2. 
Select p1.project_id, p1.employee_id
From (Select* From Project Left Join Employee Using (employee_id)) As p1,
(Select project_id, Max(experience_years) As years 
 From Project Left Join Employee Using (employee_id) 
 Group By project_id) As p2
Where p1.project_id = p2.project_id
And p1.experience_years = p2.years;

📌 1107. New Users Daily Count
解法 1.
With cte As
(Select user_id, Min(activity_date) As activity_date
 From Traffic
 Where activity="login"
 Group By user_id)
 
Select activity_date As login_date, Count(*) As user_count
From cte
Where Datediff("2019-06-30",activity_date)<=90
Group By activity_date
 
解法 2.
Select Distinct(login_date), Count(user_id) As user_count 
From (Select user_id, Min(activity_date) As login_date
      From Traffic
      Where activity = "login"
      Group By user_id) As t1
Where Datediff("2019-06-30", login_date) <= 90
Group By login_date;

📌 1126. Active Businesses
解法 1.
With cte As
(Select event_type, Avg(occurences) As num
From Events
Group By event_type)

Select e1.business_id
From Events e1 Left Join cte
Using(event_type)
Where e1.occurences > num
Group By e1.business_id
Having Count(Distinct e1.event_type)>1

解法 2. 
Select business_id
From events e1 Left Join (Select event_type, Avg(occurences) As average 
                          From events
                          Group By event_type) As e2
On e1.event_type = e2.event_type
Where e1.occurences > average 
Group By business_id
Having Count(e1.event_type) >1;

📌 1364. Number of Trusted Contacts of a Customer
Select invoice_id, customer_name, price, Ifnull(Count(contact_email),0) As contacts_cnt, 
IFNULL(Sum(Case When contact_name In (Select Distinct customer_name From Customers) Then 1 Else 0 End),0) As trusted_contacts_cnt
From Invoices i1 Left Join Contacts c1 Using(user_id)
Join Customers c2 On customer_id = user_id
Group By invoice_id, i1.user_id
Order By invoice_id;

📌 1468. Calculate Salaries
解法 1.
With cte As
(Select company_id, Max(salary) As maxx, 
(Case When Max(salary) < 1000 Then 0
When Max(salary) > 10000 Then 49
Else 24 End) As tax
From Salaries
Group By company_id)

Select company_id, employee_id, employee_name, Round(salary-((tax/100)*salary),0) As salary
From Salaries Left Join cte Using(company_id)

解法 2. 
Select s1.company_id, employee_id,employee_name, Round(salary*tax,0) As salary
From Salaries s1 Left Join (Select company_id, 
                         (Case When Max(salary) < 1000 Then 1
                          When Max(salary) >= 10000 Then 0.51
                          Else 0.76 End) As tax
                         From Salaries
                         Group By company_id) As s2
Using(company_id);
