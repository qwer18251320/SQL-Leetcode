#### 175. Combine Two Tables
##### Method 1.
Select p1.FirstName, p1.LastName, IFNULL(a1.City,null) As City, IFNULL(a1.State,null) As State
From Person p1 Left Join Address a1 Using(PersonId);
###### Null value-regardless if there is an address for each of those people


#### 176. Second Highest Salary
##### Method 1.
With cte As
(Select*, Dense_Rank() Over (Order By Salary DESC) As rnk
From Employee)
 
Select Max(Salary) As SecondHighestSalary
From cte
Where rnk=2
 
##### Method 2.
Select Max(Salary) As SecondHighestSalary
From Employee
Where Salary not in (Select Max(Salary) From Employee);
 
##### Method 3.
Select Max(Salary) As SecondHighestSalary
From Employee
Where Salary < (Select Max(Salary) From Employee);


#### 181. Employees Earning More Than Their Managers
##### Method 1.
Select e1.Name As Employee
From Employee e1, Employee e2
Where e1.ManagerId = e2.Id 
And e1.Salary > e2.Salary;

##### Method 2. Inner Join
Select e1.Name As Employee 
From Employee e1 Inner Join Employee e2
On e1.ManagerId = e2.Id 
Where e1.Salary > e2.Salary;


#### 182. Duplicate Emails
##### Method 1. Window Function
With cte As
(Select Email, Count(*) As num
From Person
Group By Email)

Select Email
From cte
Where num >1;

##### Method 2. 
Select Email
From (Select Email, Count(*) As num
From Person
Group By Email) As p1
Where num >1;

##### Method 3.
Select Email
From Person
Group By Email
Having Count(*)>1;


#### 183. Customers Who Never Order
##### Method 1. NOT IN
Select Name As Customers
From Customers
Where Id NOT IN (Select CustomerID From Orders);

##### Method 2. IS NULL
Select Name As Customers
From Customers c1 Left Join Orders o1
On c1.Id = o1.CustomerId
Where CustomerId IS NULL;



#### 196. Delete Duplicate Emails
##### Method 1. Delete & Where
Delete p1 
From Person p1, Person p2
Where p1.Email = p2.Email 
And p1.Id > p2.Id;

##### Method 2. Delete & Join
Delete p1 
From Person p1 Join Person p2
On p1.Email = p2.Email 
And p1.Id > p2.Id;



#### 197. Rising Temperature
##### Method 1. DateDiff(a,b)
Select w2.id
From Weather w1, Weather w2
Where DateDiff(w2.recordDate,w1.recordDate)=1 #w2-w1=1, 以w2為主
And w2.Temperature > w1.Temperature;

##### Method 2. Join & On 
Select w2.id
From Weather w1 Join Weather w2 
On DateDiff(w2.recordDate,w1.recordDate)=1
And w2.Temperature > w1.Temperature;


#### 511. Game Play Analysis I
##### Method 1. window function
With cte As
(Select*, Rank() Over (Partition By player_id Order By event_date ASC) As rnk
From Activity)

Select player_id, event_date As first_login
From cte
Where rnk=1;

##### Method 2.
Select player_id, Min(event_date) As first_login
From Activity
Group By player_id;



#### 512. Game Play Analysis II
##### Method 1. window function
With cte As
(Select*, Rank() Over (Partition By player_id Order By event_date ASC) As rnk
From Activity)

Select player_id, device_id
From cte
Where rnk=1;

##### Method 2. subquery, where xxx In <faster than 84.72%>
Select player_id, device_id
From Activity 
Where (player_id,event_date) In (Select player_id, Min(event_date) As event_date
                                 From Activity
                                 Group By player_id);

#### 577. Employee Bonus
##### Method 1. IfNull(), IS NULL
Select name, IfNull(bonus,null) As bonus
From Employee e1 Left Join Bonus b1 Using (empId)
Where bonus < 1000 Or bonus IS NULL;

##### Method 2. IfNull() in where
Select name, bonus
From Employee e1 Left Join Bonus b1 Using (empId)
Where IFNULL(bonus,0)<1000;





#### 584. Find Customer Referee
##### Method 1. Where IFnull() <508 ms>
Select name
From customer
Where IfNull(referee_id,0) != 2;
##### Method 2. OR, IS NULL
Select name
From customer
Where referee_id != 2 Or referee_id IS NULL;

##### Method 3. Not In with subquery
Select name
From customer
Where id Not In (Select id From customer Where referee_id=2)


#### 586. Customer Placing the Largest Number of Orders
##### Method 1. Order By count(*) <369 ms>
Select customer_number
From Orders
Group By customer_number
Order By Count(order_number) Desc
Limit 1;


##### Method 2. Subquery - can change to cte but using more runtime than subquery, dense_rank
Select customer_number
From
(Select customer_number, 
Dense_Rank() Over (Order By Count(order_number) Desc) As rnk
From Orders
Group By customer_number) As o1
Where rnk=1;




#### 595. Big Countries
##### Method 1.



##### Method 2.



#### 596. Classes More Than 5 Students
##### Method 1.
##### Method 2.



#### 597. Friend Requests I: Overall Acceptance Rate
##### Method 1.
##### Method 2.
