📌 550. Game Play Analysis IV
解法 1. 
Select Round(Count(Distinct a2.player_id)/
             (Select Count(Distinct player_id) From Activity),2) As fraction
From Activity a1, 
(Select player_id, Min(event_date) As first_log
From Activity
Group By player_id) As a2
Where Datediff(event_date,first_log)=1
And a1.player_id=a2.player_id

解法 2. 
Select Round(Count(Distinct a2.player_id) / (Select Count(Distinct player_id) From Activity),2) As fraction
From Activity a1 Left Join
(Select player_id, Min(event_date) As first_log
From Activity
Group By player_id) As a2
On a1.player_id = a2.player_id And DateDiff(event_date, first_log) = 1;

📌 585. Investments in 2016
Select Round(Sum(tiv_2016),2) As tiv_2016
From Insurance
Where tiv_2015 In (Select TIV_2015
                  From insurance
                  Group By TIV_2015
                  Having Count(*)>1)
And (LAT,LON) IN (Select LAT, LON
                  From insurance 
                  Group By LAT, LON
                  Having Count(*)=1);

📌 608. Tree Node
Select id, 
(Case When id = (Select id 
                 From tree 
                 Where p_id IS NULL) Then "Root"
When id In (Select p_id From tree) Then "Inner"
Else "Leaf" End) As Type
From tree;

📌 602. Friend Requests II: Who Has the Most Friends
解法 1.
Select id, Sum(cnt) As num
From 
((Select requester_id as id, Count(*) As cnt
From RequestAccepted 
Group By requester_id)
Union All
(Select accepter_id as id, Count(*) As cnt
From RequestAccepted 
Group By accepter_id)) t
Group By id
Order By num DESC
Limit 1

解法 2. 
Select id, Count(*) As num
From ((Select requester_id As id From RequestAccepted)
Union All
(Select accepter_id As id  From RequestAccepted)) As t
Group By id
Order By num Desc
Limit 1







📌 626. Exchange Seats
Select 
(Case When id%2 != 0 And counts = id Then id 
When id%2 != 0 And counts != id Then id+1
Else id-1 End) As id, student
From seat, (Select Count(*) As counts From seat) As s1
Order By id ASC;

#MOD (COULMN, 2)

### 一個表有，另一個表無，合併要注意沒有的數值 ###
📌 580. Count Student Number in Departments
解法 1. 
With cte As
(Select s1.dept_id, Count(student_id) As student_number
From Student s1 
Group By s1.dept_id)

Select dept_name, Ifnull(student_number,0) As student_number
From Department d1 Left Join cte
Using(dept_id)
Order By student_number DESC, dept_name ASC

解法 2. left outer join 也可以
Select d1.dept_name, Ifnull(Count(s1.student_id),0) As student_number
From Department d1 Left Join Student s1 
Using(dept_id)
Group By d1.dept_name
Order By student_number DESC, dept_name ASC


📌 612. Shortest Distance in a Plane
解法 1.
Select Min(Round(Sqrt(Pow(p1.x-p2.x,2)+Pow(p1.y-p2.y,2)),2)) As shortest
From point_2d p1, point_2d p2
Where p1.x != p2.x OR p1.y != p2.y;

解法 2. 
With cte AS
(Select Round(SQRT(Pow(p1.x-p2.x,2)+Pow(p1.y-p2.y,2)),2) As dist
From Point2D p1, Point2D p2
Where p1.x != p2.x
Or p1.y != p2.y)

Select Min(dist) As shortest
From cte

📌 614. Second Degree Follower
解法 1.
Select followee As follower, Count(follower) As num
From Follow
Where followee In (Select follower As followee 
                   From Follow 
                   Group By follower
                   Having Count(followee)>=1 )
Group By followee
Order By follower ASC

解法 2.
Select f1.follower, Count(Distinct f2.follower) As num
From follow f1 Join follow f2  
On f1.follower = f2.followee
Group By f1.follower
Order By f1.follower;
